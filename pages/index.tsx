import Card from "@/components/Card";
import FormField from "@/components/Form";
import Loader from "@/components/Loader";
import Head from "next/head";
import { SetStateAction, useEffect, useState } from "react";

export default function Home() {
  const [loading, setLoading] = useState(false);
  const [searchText, setSearchText] = useState("");
  const [allPosts, setAllPosts] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [searchedResults, setSearchedResults] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);

    // try {
    //   const response = await fetch(
    //     "https://dalle-arbb.onrender.com/api/v1/post",
    //     {
    //       method: "GET",
    //       headers: {
    //         "Content-Type": "application/json",
    //       },
    //     }
    //   );

    //   if (response.ok) {
    //     const result = await response.json();
    //     setAllPosts(result.data.reverse());
    //   }
    // } catch (err) {
    //   alert(err);
    // } finally {
    //   setLoading(false);
    // }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e: {
    target: { value: SetStateAction<string> };
  }) => {
    clearTimeout(searchTimeout!);
    setSearchText(e.target.value);

    // setSearchTimeout(
    //   setTimeout(() => {
    //     const searchResult = allPosts.filter(
    //       (item: { name: string; prompt: string; }) =>
    //         item.name.toLowerCase().includes(searchText.toLowerCase()) ||
    //         item.prompt.toLowerCase().includes(searchText.toLowerCase())
    //     );
    //     setSearchedResults(searchResult);
    //   }, 500)
    // );
  };
  return (
    <>
      <Head>
        <title>Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="sm:p-8 px-4 py-8 w-full bg-[#f9fafe] min-h-[calc(100vh-73px)]">
        <section className="max-w-7xl mx-auto">
          <div>
            <h1 className="font-extrabold text-[#222328] text-[32px]">
              The Community Showcase
            </h1>
            <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
              Browse through a collection of imaginative and visually stunning
              images generated by DALL-E AI
            </p>
          </div>

          <div className="mt-16">
            <FormField
              labelName="Search posts"
              type="text"
              name="text"
              placeholder="Search something..."
              value={searchText}
              handleChange={handleSearchChange}
            />
          </div>

          <div className="mt-10">
            {loading ? (
              <div className="flex justify-center items-center">
                <Loader />
              </div>
            ) : (
              <>
                {searchText && (
                  <h2 className="font-medium text-[#666e75] text-xl mb-3">
                    Showing Resuls for{" "}
                    <span className="text-[#222328]">{searchText}</span>:
                  </h2>
                )}
                <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                  {searchText ? (
                    <RenderCards
                      data={searchedResults}
                      title="No Search Results Found"
                    />
                  ) : (
                    <RenderCards data={allPosts} title="No Posts Yet" />
                  )}
                </div>
              </>
            )}
          </div>
        </section>
      </main>
    </>
  );
}
const RenderCards = ({ data, title }: any) => {
  if (data?.length > 0) {
    return data.map(
      (
        post: JSX.IntrinsicAttributes & {
          _id: number;
          name: string;
          prompt: string;
          photo: any;
        }
      ) => <Card key={post._id} {...post} />
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};
